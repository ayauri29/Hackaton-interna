{"version":3,"sources":["img/img2.jpeg","img/img1.jpeg","components/Login.jsx","components/Inicio.jsx","components/LinkCatalogo.jsx","components/NuevoPedido.jsx","components/Ciclos.jsx","components/SideDrawer/DrawerLong.jsx","components/Toolbar/Toolbar.jsx","components/SideDrawer/Drawer.jsx","components/Backdrop/Backdrop.jsx","views/Consultora.jsx","components/Bienvenida.jsx","serviceWorker.js","index.js","RouteHack.js"],"names":["module","exports","Login","Form","className","FormGroup","type","placeholder","href","to","ProgressBar","props","state","progress","this","setState","width","style","React","Component","Inicio","LinkCatalogo","NuevoPedido","Ciclos","DrawerLong","onClick","click","Toolbar","drawerClickHandler","Drawer","backdrop","Consultora","DrawerOpen","drawerToggleClickHandler","prevState","backdropClickHandler","sideDrawer","height","marginTop","Bienvenida","src","belcorpImg","alt","belcorSnrs","Boolean","window","location","hostname","match","ReactDOM","render","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7a7da449.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img2.e498f22a.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/img1.e3b2509b.jpeg\";","import React from 'react';\r\nimport '../css/main.css'\r\nimport {Link} from 'react-router-dom';\r\nimport { Form, FormGroup} from 'react-bootstrap';\r\n\r\n\r\n\r\nexport const Login = () => {\r\n    return (\r\n         <Form className=\"login-form\">\r\n         <h2 className=\"mt-4 mb-5\"><span className=\"text-center\"> Ingreso </span></h2>\r\n        <FormGroup>\r\n             <label>Código consultora</label>\r\n            <input className=\"inputs\" type=\"text\" />\r\n           </FormGroup>\r\n           <FormGroup>\r\n           <label>Contraseña</label>\r\n               <input className=\"inputs\" type=\"password\" placeholder=\"Contraseña\"/>\r\n       </FormGroup> \r\n       <p className=\"text-right \" ><a className=\"text-dark text-reset\" href=\"#\" >¿Olvidaste tu contraseña?</a></p>\r\n        <button className=\"color btn-lg btn-block text-white\"><Link to=\"/consultora\">INGRESAR</Link></button>\r\n        <p className=\"mt-4 text-right\">¿No tienes cuenta?  <a className=\"text-dark text-reset\" href=\"#\">Regístrate</a></p>\r\n      </Form> \r\n\r\n  \r\n    )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport'../css/stylos.css'\r\n\r\n\r\nclass ProgressBar extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        progress: 25\r\n      };\r\n    }\r\n    \r\n    clickHandler() {\r\n      this.setState({\r\n        progress: this.state.progress < 100 ? this.state.progress + 5 : 100\r\n      });\r\n    }\r\n    \r\n    render() {\r\n      var progress = {\r\n        width: this.state.progress + \"%\"\r\n      }\r\n      \r\n      return (\r\n        <div>\r\n          <div className=\"shell\">\r\n            <div className=\"bar\" style={ progress }><span className='color'></span></div>\r\n            <p>{ this.state.progress + \"00\" }</p>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\nexport const Inicio = () =>{\r\n\r\n    return(\r\n        <div className=\"flex\">\r\n            <p>Gana mas puntos para llegar al siguiente Nivel</p>\r\n            <ProgressBar/>\r\n            <div className=\"flex\"> \r\n                <p>TIENDA VIRTUAL</p>\r\n                <button className=\"compart\" >COMPARTIR\r\n                <Link to=\"https://issuu.com/somosbelcorp/docs/lbel.peru.c17.2018?mode=embed\"></Link>    \r\n                </button>\r\n            </div>\r\n         </div>\r\n    )\r\n}","import React from 'react';\r\nimport'../css/stylos.css'\r\n\r\n\r\nexport const LinkCatalogo = () =>{\r\n\r\n    return(\r\n        <div>\r\n           \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport'../css/stylos.css'\r\n\r\n\r\nexport const NuevoPedido = () =>{\r\n\r\n    return(\r\n        <div>\r\n           \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport'../css/stylos.css'\r\n\r\n\r\nexport const Ciclos = () =>{\r\n\r\n    return(\r\n        <div>\r\n           \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport  './DrawerLong.css';\r\n\r\n\r\nconst DrawerLong = props => {\r\n  return(\r\n    <button className=\"toggle-button\" onClick={props.click}>\r\n      <div className=\"toggle-button_line\"/>\r\n    <div className=\"toggle-button_line\" />\r\n    <div className=\"toggle-button_line\"/>\r\n    </button>\r\n    \r\n    \r\n    \r\n    )\r\n\r\n\r\n}\r\n\r\nexport default DrawerLong;","import React from 'react';\r\n\r\n import './toolbar.css';\r\nimport DrawerLong from '../SideDrawer/DrawerLong';\r\n \r\nexport const Toolbar = props => {\r\n  return ( \r\n  <header className=\"toolbar\">\r\n  <nav className=\"toolbar_navigation\">\r\n    <div>\r\n      <DrawerLong click={props.drawerClickHandler}/>\r\n    </div>\r\n    <div className=\"toolbar_logo\"><a href=\"/\"></a></div>\r\n <div className=\"spacer\"/>\r\n  <div className=\"toolbar_navigation-items\">\r\n    <ul>\r\n      <li><a href=\"/\">b</a></li>\r\n      <li><a href=\"/\">b</a></li>\r\n    </ul>\r\n  </div>\r\n  </nav>\r\n</header>\r\n)\r\n\r\n};\r\nexport default Toolbar","import React from 'react';\r\nimport './Drawer.css';\r\nconst Drawer = props => {\r\n  let drawerClasess = 'side-drawer';\r\n\r\n  return(\r\n    <nav className={drawerClasess}>\r\n      <ul>\r\n        <li><a href=\"#/\">Inicio</a></li>\r\n        <li><a href=\"#/\">Mi Cuenta</a></li>\r\n        <li><a href=\"#/\">Mis pedidos</a></li>\r\n        <li><a href=\"#/\">Mis Puntos</a></li>\r\n        <li><a href=\"#/\">Configuración</a></li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\nexport default Drawer","import React from 'react';\r\nimport './Backdrop.css'\r\nconst backdrop = props => {\r\n  return (\r\n<div className=\"backdrop\" onClick={props.click}/>\r\n  )\r\n};\r\nexport default backdrop;","import React, { Component } from 'react';\r\n// import { Link } from 'react-router-dom';\r\nimport { Inicio } from '../components/Inicio'\r\n// import { Header } from '../components/Header';\r\nimport { Toolbar } from '../components/Toolbar/Toolbar'\r\nimport Drawer from '../components/SideDrawer/Drawer'\r\nimport Backdrop from '../components/Backdrop/Backdrop'\r\nexport class Consultora extends Component {\r\n    state = {\r\n        DrawerOpen :false\r\n    };\r\ndrawerToggleClickHandler = () => {\r\n    this.setState((prevState)=>{\r\n        return{DrawerOpen :!prevState.DrawerOpen};\r\n    })\r\n};\r\nbackdropClickHandler = () => {\r\n  this.setState({DrawerOpen:false});\r\n};\r\n\r\nrender(){\r\n    let sideDrawer;\r\n    let backdrop;\r\n     if(this.state.DrawerOpen){\r\nsideDrawer = <Drawer />\r\nbackdrop =  <Backdrop click={this.backdropClickHandler}/>\r\n     }\r\n    return(\r\n        <div style={{height:'100%'}}>\r\n          <Toolbar drawerClickHandler={this.drawerToggleClickHandler}/>\r\n         {sideDrawer}\r\n          {backdrop}\r\n          \r\n          \r\n<main style ={{marginTop:'63px'}}>\r\n<Inicio/>\r\n</main>\r\n\r\n        </div>\r\n    )\r\n}\r\n    \r\n    \r\n}","import React from 'react';\r\nimport '../css/main.css';\r\nimport belcorpImg from '../img/img2.jpeg';\r\nimport belcorSnrs from '../img/img1.jpeg';\r\n// import {Button} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom'\r\n\r\n      export const Bienvenida = () => {\r\n           return (\r\n             \r\n            <div className=\"login\">\r\n            <div className=\"imag\">\r\n              <img className=\"img\"src={belcorpImg} alt=\"\"/>\r\n            </div>\r\n            <div>\r\n              <img src={belcorSnrs} alt=\"\"/>\r\n            \r\n            </div>\r\n            <button><Link to=\"/login\">Next</Link></button>\r\n             </div> \r\n           )\r\n      }\r\n ","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { RouteHack } from './RouteHack';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<RouteHack />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { Login} from './components/Login';\r\nimport { Inicio} from './components/Inicio';\r\nimport {LinkCatalogo} from './components/LinkCatalogo';\r\nimport {NuevoPedido} from './components/NuevoPedido';\r\nimport {Ciclos} from './components/Ciclos';\r\nimport { Consultora } from './views/Consultora'\r\nimport {Bienvenida} from './components/Bienvenida'\r\nexport const RouteHack = () => {\r\n  return (\r\n    <Router>\r\n      {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n      <Switch>\r\n      <Route path=\"/consultora\">\r\n          <Consultora />\r\n        </Route>\r\n      <Route path=\"/login\">\r\n          <Login/>\r\n        </Route>\r\n      <Route path=\"/\">\r\n      <Bienvenida />\r\n        </Route>\r\n     \r\n        <Route path=\"/inicio\">\r\n          <Inicio />\r\n        </Route>\r\n       <Route path=\"/link\">\r\n          <LinkCatalogo />\r\n        </Route>\r\n        <Route path=\"/nuevo\">\r\n          <NuevoPedido />\r\n        </Route>\r\n       <Route path=\"/ciclos\">\r\n          <Ciclos />\r\n        </Route> \r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n"],"sourceRoot":""}